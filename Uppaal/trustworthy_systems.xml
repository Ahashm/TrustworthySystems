<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.
chan request;
bool reqOpen;

const int channels = 3;
int[0, channels] topic = 0;
broadcast chan publish[channels];
urgent chan ack[channels];
urgent chan processMsg[channels];
urgent chan initiatePublish, rfid_tag;
chan success, failed;
chan heartbeat, mqtt_command_received, mqtt_command_send, closeDoor, openDoor;
int ready, doorState;

clock timeElapsed;

chan commandByServer, commandManually;</declaration>
	<template>
		<name>User</name>
		<declaration>clock wait;</declaration>
		<location id="id0" x="-272" y="-263">
			<name x="-289" y="-306">ApproachDoor</name>
		</location>
		<location id="id1" x="-127" y="-136">
			<name x="-119" y="-161">UseClient</name>
			<committed/>
		</location>
		<location id="id2" x="-408" y="-136">
			<name x="-467" y="-170">UseRfid</name>
			<committed/>
		</location>
		<location id="id3" x="-272" y="-195">
			<name x="-323" y="-229">InteractWithLock</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id3"/>
			<target ref="id1"/>
			<label kind="synchronisation" x="-254" y="-182">commandByServer!</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="synchronisation" x="-390" y="-182">commandManually!</label>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id3"/>
			<label kind="guard" x="-272" y="-246">wait &gt;= 100</label>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id0"/>
			<label kind="assignment" x="-390" y="-263">wait = 0</label>
			<nail x="-408" y="-263"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id0"/>
			<label kind="assignment" x="-254" y="-263">wait = 0</label>
			<nail x="-127" y="-263"/>
		</transition>
	</template>
	<template>
		<name x="5" y="5">Client</name>
		<declaration>// Place local declarations here.
typedef int[0,1] isOpen;
int open = 0;</declaration>
		<location id="id4" x="-467" y="-51">
			<name x="-526" y="-85">Locked</name>
		</location>
		<location id="id5" x="42" y="-59">
			<name x="76" y="-85">Open</name>
		</location>
		<location id="id6" x="-212" y="-127">
			<name x="-222" y="-161">AttemptOpen</name>
		</location>
		<location id="id7" x="-212" y="-263">
			<name x="-222" y="-297">Connecting</name>
			<committed/>
		</location>
		<location id="id8" x="-433" y="-272">
			<name x="-443" y="-306">Idle</name>
			<committed/>
		</location>
		<location id="id9" x="-204" y="34">
		</location>
		<location id="id10" x="-76" y="-17">
			<name x="-161" y="-59">RecievedCloseRequest</name>
			<committed/>
		</location>
		<location id="id11" x="-340" y="-85">
			<name x="-416" y="-119">ReceivedOpenRequest</name>
			<committed/>
		</location>
		<init ref="id8"/>
		<transition>
			<source ref="id11"/>
			<target ref="id6"/>
			<label kind="synchronisation" x="-280" y="-110">request!</label>
			<label kind="assignment" x="-314" y="-93">timeElapsed = 0</label>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id11"/>
			<label kind="synchronisation" x="-433" y="-68">commandByServer?</label>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id9"/>
			<label kind="synchronisation" x="-161" y="17">request!</label>
			<label kind="assignment" x="-161" y="34">timeElapsed = 0</label>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id10"/>
			<label kind="synchronisation" x="-68" y="-25">commandByServer?</label>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id5"/>
			<label kind="synchronisation" x="-246" y="119">success?</label>
			<nail x="-561" y="102"/>
			<nail x="-204" y="119"/>
			<nail x="127" y="93"/>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id4"/>
			<label kind="synchronisation" x="-323" y="51">success?</label>
			<nail x="51" y="59"/>
			<nail x="51" y="59"/>
			<nail x="-475" y="76"/>
			<nail x="-475" y="76"/>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id4"/>
			<label kind="synchronisation" x="-288" y="-21">success?</label>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id5"/>
			<label kind="guard" x="-119" y="-246">open==1</label>
			<nail x="110" y="-170"/>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id4"/>
			<label kind="guard" x="-552" y="-212">open == 0</label>
			<nail x="-527" y="-178"/>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id7"/>
			<label kind="assignment" x="-408" y="-289">open = doorState</label>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id4"/>
			<label kind="synchronisation" x="-288" y="-144">failed?</label>
			<nail x="-467" y="-127"/>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id5"/>
			<label kind="synchronisation" x="-34" y="-127">success?</label>
		</transition>
	</template>
	<template>
		<name>Server</name>
		<parameter>int topicChannel, int subscribeTopic</parameter>
		<declaration>bool req;
</declaration>
		<location id="id12" x="-450" y="-238">
			<name x="-460" y="-272">Idle</name>
		</location>
		<location id="id13" x="-357" y="-382">
			<name x="-348" y="-374">ReqReceived</name>
		</location>
		<location id="id14" x="-450" y="-595">
			<name x="-595" y="-603">PublishedMQTT</name>
		</location>
		<location id="id15" x="-544" y="-382">
			<name x="-663" y="-416">SuccessfulMsg</name>
			<committed/>
		</location>
		<init ref="id12"/>
		<transition>
			<source ref="id12"/>
			<target ref="id15"/>
			<label kind="synchronisation" x="-628" y="-255">publish[subscribeTopic]?</label>
			<nail x="-646" y="-238"/>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id14"/>
			<label kind="synchronisation" x="-408" y="-527">initiatePublish!</label>
			<label kind="assignment" x="-432" y="-488">topic = topicChannel</label>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id13"/>
			<label kind="synchronisation" x="-391" y="-323">request?</label>
			<label kind="assignment" x="-399" y="-297">req = reqOpen</label>
		</transition>
		<transition>
			<source ref="id15"/>
			<target ref="id12"/>
			<label kind="synchronisation" x="-526" y="-327">success!</label>
		</transition>
		<transition>
			<source ref="id14"/>
			<target ref="id15"/>
			<label kind="synchronisation" x="-646" y="-518">processMsg[subscribeTopic]?</label>
			<nail x="-493" y="-493"/>
		</transition>
	</template>
	<template>
		<name x="5" y="5">Broker</name>
		<declaration>// Place local declarations here.

int publishChan = 0;
clock receivedMsg;
int list[11];</declaration>
		<location id="id16" x="161" y="-85">
			<name x="151" y="-119">Listening</name>
		</location>
		<location id="id17" x="450" y="-85">
			<name x="416" y="-119">InitiatePublish</name>
			<committed/>
		</location>
		<location id="id18" x="450" y="119">
			<name x="459" y="85">Publish</name>
		</location>
		<location id="id19" x="306" y="17">
			<name x="315" y="-17">Reset</name>
			<committed/>
		</location>
		<init ref="id16"/>
		<transition>
			<source ref="id19"/>
			<target ref="id16"/>
		</transition>
		<transition>
			<source ref="id18"/>
			<target ref="id19"/>
			<label kind="synchronisation" x="280" y="68">publish[publishChan]!</label>
		</transition>
		<transition>
			<source ref="id17"/>
			<target ref="id18"/>
			<label kind="assignment" x="442" y="18">publishChan = topic</label>
		</transition>
		<transition>
			<source ref="id16"/>
			<target ref="id17"/>
			<label kind="synchronisation" x="204" y="-102">initiatePublish?</label>
		</transition>
	</template>
	<template>
		<name>BrokerQos</name>
		<declaration>int publishTopic = 0;

clock resend;
clock committed;

int list[channels + 1];
int[0,channels] len;

// Put an element at the end of the queue
void enqueue(int topic)
{
        list[len++] = topic;
}

// Remove the front element of the queue
void dequeue()
{
        int i = 0;
        len -= 1;
        while (i &lt; len)
        {
                list[i] = list[i + 1];
                i++;
        }
        list[i] = 0;
}

// Returns the front element of the queue
int front()
{
   return list[0];
}

// Returns the last element of the queue
int tail()
{
   return list[len - 1];
}</declaration>
		<location id="id20" x="-1130" y="-1402">
			<name x="-1140" y="-1436">Checking</name>
			<label kind="invariant" x="-1181" y="-1453">len == 0 or committed &lt; 1</label>
		</location>
		<location id="id21" x="-883" y="-1249">
			<name x="-994" y="-1300">AwaitResponse</name>
			<label kind="invariant" x="-917" y="-1207">resend &lt;= 2</label>
		</location>
		<location id="id22" x="-1130" y="-1249">
			<name x="-1140" y="-1283">Sent</name>
			<committed/>
		</location>
		<init ref="id20"/>
		<transition>
			<source ref="id20"/>
			<target ref="id21"/>
			<label kind="guard" x="-1028" y="-1419">len &gt; 0</label>
			<label kind="assignment" x="-883" y="-1394">resend = 0</label>
			<nail x="-883" y="-1402"/>
		</transition>
		<transition>
			<source ref="id21"/>
			<target ref="id21"/>
			<label kind="guard" x="-865" y="-1304">len &lt; channels</label>
			<label kind="synchronisation" x="-739" y="-1283">publish[topic]?</label>
			<label kind="assignment" x="-739" y="-1266">enqueue(topic)</label>
			<nail x="-747" y="-1292"/>
			<nail x="-747" y="-1215"/>
		</transition>
		<transition>
			<source ref="id21"/>
			<target ref="id21"/>
			<label kind="guard" x="-865" y="-1228">len &lt;= channels</label>
			<label kind="synchronisation" x="-926" y="-1139">publish[front()]!</label>
			<label kind="assignment" x="-909" y="-1122">resend = 0</label>
			<nail x="-781" y="-1139"/>
			<nail x="-968" y="-1139"/>
		</transition>
		<transition>
			<source ref="id22"/>
			<target ref="id20"/>
			<label kind="assignment" x="-1130" y="-1325">dequeue(),
committed = 0</label>
		</transition>
		<transition>
			<source ref="id21"/>
			<target ref="id22"/>
			<label kind="synchronisation" x="-1062" y="-1266">ack[front()]?</label>
		</transition>
		<transition>
			<source ref="id20"/>
			<target ref="id21"/>
			<label kind="guard" x="-1096" y="-1394">len == 0</label>
			<label kind="synchronisation" x="-1070" y="-1385">publish[topic]?</label>
			<label kind="assignment" x="-1045" y="-1368">enqueue(topic),
resend = 0</label>
		</transition>
	</template>
	<template>
		<name>MqttClient</name>
		<parameter>int subscribeTopic</parameter>
		<declaration>
int messages = 0;
clock timeToProcess, wait;</declaration>
		<location id="id23" x="-289" y="-416">
			<name x="-299" y="-450">Idle</name>
		</location>
		<location id="id24" x="-204" y="-306">
		</location>
		<location id="id25" x="-365" y="-306">
			<committed/>
		</location>
		<location id="id26" x="-289" y="-552">
			<committed/>
		</location>
		<init ref="id23"/>
		<transition>
			<source ref="id26"/>
			<target ref="id23"/>
			<label kind="assignment" x="-271" y="-518">messages-=1</label>
			<nail x="-204" y="-484"/>
		</transition>
		<transition>
			<source ref="id23"/>
			<target ref="id26"/>
			<label kind="guard" x="-442" y="-476">messages&gt;0</label>
			<label kind="synchronisation" x="-501" y="-518">processMsg[subscribeTopic]!</label>
			<nail x="-374" y="-484"/>
		</transition>
		<transition>
			<source ref="id25"/>
			<target ref="id23"/>
			<label kind="assignment" x="-416" y="-374">messages+=1,
wait = 0</label>
		</transition>
		<transition>
			<source ref="id24"/>
			<target ref="id25"/>
			<label kind="synchronisation" x="-347" y="-323">ack[subscribeTopic]!</label>
		</transition>
		<transition>
			<source ref="id23"/>
			<target ref="id24"/>
			<label kind="synchronisation" x="-255" y="-391">publish[subscribeTopic]?</label>
			<label kind="assignment" x="-238" y="-365">timeToProcess = 0</label>
		</transition>
	</template>
	<template>
		<name x="5" y="5">esp32</name>
		<parameter>int topicChannel, int subscribeTopic</parameter>
		<declaration>// Place local declarations here.
clock time;
bool wifiConnected=true, doorOpened;</declaration>
		<location id="id27" x="561" y="-17">
			<name x="551" y="-51">On</name>
		</location>
		<location id="id28" x="816" y="59">
			<name x="833" y="51">Connected</name>
			<committed/>
		</location>
		<location id="id29" x="901" y="144">
			<name x="799" y="119">MQTT_sending</name>
		</location>
		<location id="id30" x="306" y="331">
			<name x="187" y="322">MQTT_receiving</name>
			<committed/>
		</location>
		<location id="id31" x="561" y="144">
			<name x="570" y="119">Idle</name>
		</location>
		<location id="id32" x="306" y="561">
			<name x="212" y="552">UnlockDoor</name>
			<committed/>
		</location>
		<location id="id33" x="306" y="59">
			<name x="221" y="51">Disconnect</name>
		</location>
		<location id="id34" x="561" y="561">
			<name x="586" y="552">LockDoor</name>
			<committed/>
		</location>
		<location id="id35" x="816" y="331">
			<name x="833" y="322">RFID</name>
			<committed/>
		</location>
		<location id="id36" x="561" y="331">
			<name x="527" y="297">DoorState</name>
			<urgent/>
		</location>
		<location id="id37" x="816" y="561">
			<name x="773" y="578">DoorOpen</name>
			<committed/>
		</location>
		<init ref="id27"/>
		<transition>
			<source ref="id28"/>
			<target ref="id31"/>
			<label kind="assignment" x="613" y="59">ready=1</label>
			<nail x="595" y="59"/>
		</transition>
		<transition>
			<source ref="id34"/>
			<target ref="id29"/>
			<nail x="561" y="612"/>
			<nail x="960" y="612"/>
			<nail x="960" y="144"/>
		</transition>
		<transition>
			<source ref="id32"/>
			<target ref="id29"/>
			<nail x="306" y="646"/>
			<nail x="1003" y="646"/>
			<nail x="1003" y="102"/>
			<nail x="901" y="102"/>
		</transition>
		<transition>
			<source ref="id36"/>
			<target ref="id34"/>
			<label kind="guard" x="569" y="450">doorState==1</label>
			<label kind="synchronisation" x="569" y="484">closeDoor!</label>
		</transition>
		<transition>
			<source ref="id37"/>
			<target ref="id29"/>
			<nail x="901" y="561"/>
		</transition>
		<transition>
			<source ref="id36"/>
			<target ref="id37"/>
			<label kind="guard" x="612" y="374">doorState==0 &amp;&amp; timeElapsed&gt;10</label>
			<nail x="603" y="399"/>
			<nail x="816" y="399"/>
		</transition>
		<transition>
			<source ref="id29"/>
			<target ref="id31"/>
			<label kind="synchronisation" x="629" y="119">initiatePublish!</label>
			<label kind="assignment" x="629" y="144">topic = topicChannel</label>
		</transition>
		<transition>
			<source ref="id31"/>
			<target ref="id33"/>
			<label kind="guard" x="365" y="34">wifiConnected==false</label>
			<nail x="518" y="59"/>
		</transition>
		<transition>
			<source ref="id31"/>
			<target ref="id35"/>
			<label kind="synchronisation" x="679" y="203">rfid_tag?</label>
			<nail x="594" y="229"/>
			<nail x="816" y="229"/>
		</transition>
		<transition>
			<source ref="id31"/>
			<target ref="id30"/>
			<label kind="guard" x="331" y="187">wifiConnected==true</label>
			<label kind="synchronisation" x="331" y="203">processMsg[subscribeTopic]?</label>
			<nail x="518" y="229"/>
			<nail x="306" y="229"/>
		</transition>
		<transition>
			<source ref="id36"/>
			<target ref="id32"/>
			<label kind="guard" x="297" y="374">doorState==0 &amp;&amp; timeElapsed&lt;=10</label>
			<label kind="synchronisation" x="382" y="399">openDoor!</label>
			<nail x="518" y="399"/>
			<nail x="306" y="399"/>
		</transition>
		<transition>
			<source ref="id35"/>
			<target ref="id36"/>
			<label kind="assignment" x="579" y="331">timeElapsed = 0</label>
		</transition>
		<transition>
			<source ref="id30"/>
			<target ref="id36"/>
		</transition>
		<transition>
			<source ref="id27"/>
			<target ref="id28"/>
			<label kind="guard" x="603" y="-42">wifiConnected==true</label>
			<nail x="816" y="-17"/>
		</transition>
		<transition>
			<source ref="id27"/>
			<target ref="id33"/>
			<label kind="guard" x="382" y="-42">wifiConnected==false</label>
			<nail x="306" y="-17"/>
		</transition>
	</template>
	<template>
		<name>rfidTag</name>
		<location id="id38" x="-238" y="-85">
			<name x="-280" y="-93">Idle</name>
		</location>
		<location id="id39" x="-59" y="-85">
			<name x="-42" y="-93">UnlockDoor</name>
		</location>
		<init ref="id38"/>
		<transition>
			<source ref="id39"/>
			<target ref="id38"/>
			<label kind="synchronisation" x="-170" y="-42">rfid_tag!</label>
			<nail x="-59" y="-17"/>
			<nail x="-238" y="-17"/>
		</transition>
		<transition>
			<source ref="id38"/>
			<target ref="id39"/>
			<label kind="guard" x="-170" y="-136">ready==1</label>
			<label kind="synchronisation" x="-220" y="-161">commandManually?</label>
			<nail x="-238" y="-144"/>
			<nail x="-59" y="-144"/>
		</transition>
	</template>
	<template>
		<name>Doorlock</name>
		<declaration>clock maxTime;</declaration>
		<location id="id40" x="59" y="-136">
			<name x="76" y="-144">Unlocked</name>
		</location>
		<location id="id41" x="-178" y="-136">
			<name x="-237" y="-144">Locked</name>
		</location>
		<init ref="id41"/>
		<transition>
			<source ref="id40"/>
			<target ref="id41"/>
			<label kind="synchronisation" x="-93" y="-102">closeDoor?</label>
			<label kind="assignment" x="-93" y="-85">doorState=0</label>
			<nail x="59" y="-60"/>
			<nail x="-178" y="-60"/>
		</transition>
		<transition>
			<source ref="id41"/>
			<target ref="id40"/>
			<label kind="synchronisation" x="-93" y="-212">openDoor?</label>
			<label kind="assignment" x="-93" y="-195">doorState=1</label>
			<nail x="-178" y="-212"/>
			<nail x="59" y="-212"/>
		</transition>
	</template>
	<system>// Place template instantiations here.
MqttClientEsp = MqttClient(1);
MqttClientServer = MqttClient(2);
Server1 = Server(1, 2);
Esp = esp32(2,1);

// List one or more processes to be composed into a system.
system Broker, BrokerQos, MqttClientEsp, MqttClientServer, Esp, Doorlock, rfidTag, Server1, Client, User;
    </system>
	<queries>
		<query>
			<formula>E&lt;&gt; Esp.DoorState and timeElapsed &lt; 10</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A[] not deadlock</formula>
			<comment></comment>
		</query>
		<query>
			<formula>(Esp.DoorState and doorState == 1 and timeElapsed &lt; 10) --&gt; (Doorlock.Unlocked)</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A[] Esp.UnlockDoor imply doorState == 1 and timeElapsed &lt;= 10 and Doorlock.Unlocked</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; MqttClientServer.messages &gt; 1</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A[] Esp.UnlockDoor imply Doorlock.Unlocked </formula>
			<comment></comment>
		</query>
	</queries>
</nta>
